ruby:
  require 'uri'

  article ||= nil
  item    ||= nil
  description ||= nil
  content ||= nil
  twitter_username ||= nil
  facebook_url ||= nil
  published ||= nil
  url ||= nil
  image ||= nil

  markdown = article.try(:[], :body) || item.try(:[], :body)

  social_cover = image || article.try(:[], :cover).try(:[], :url) || item.try(:[], :cover).try(:[], :url)
  social_title = article.try(:[], :title) || item.try(:[], :title) || title
  social_text  = description || content || (strip_tags Tilt['markdown'].new { markdown || '' }.render)

  if social_cover.present?
    hoge = URI.parse social_cover
    if hoge.scheme.blank?
      hoge.scheme = 'http'
    end
    social_cover = hoge.to_s
  end


  twitter = {
    :creator     => twitter_username || article.try(:[], :twitter_username) || article.try(:[], :author).try(:[], :twitter_username) || item.try(:[], :author).try(:[], :twitter_username),
    :title       => social_title,
    :description => social_text,
    :image       => social_cover
  }
  ogp = {
    :title       => social_title,
    :url         => url,
    :image       => social_cover,
    :description => social_text,
    :author      => facebook_url || article.try(:[], :author).try(:[], :facebook_url) || item.try(:[], :author).try(:[], :facebook_url),
    :published   => published || article.try(:[], :timestamp) || item.try(:[], :timestamp)
  }
= partial '/partials/_meta_twitter', :locals => { :locals => twitter }
= partial '/partials/_meta_ogp',     :locals => { :locals => ogp }
